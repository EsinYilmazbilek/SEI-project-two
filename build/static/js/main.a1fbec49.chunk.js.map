{"version":3,"sources":["components/common/Home.js","components/definition/DefinitionCard.js","components/common/Notification.js","components/definition/DefinitionShow.js","App.js","index.js"],"names":["Home","history","useHistory","React","useState","userWord","setUserWord","randomWords","require","handleSubmit","e","preventDefault","toLowerCase","push","className","onSubmit","type","onChange","target","value","placeholder","onClick","DefinitionCard","wordToCapitalize","name","phonetic","origin","def","element","audio","charAt","toUpperCase","slice","map","eachDef","console","log","src","controls","createNotification","notify","show","DefinitionShow","params","useParams","useLocation","words","setWords","isSpellingError","setSpellingIsError","useEffect","getData","a","axios","get","res","data","userNewWord","setUserNewWord","word","meanings","partOfSpeech","definitions","definition","phonetics","uuid","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"4MA4DeA,MAxDf,WACE,IAAMC,EAAUC,cAChB,EAAgCC,IAAMC,SAAS,IAA/C,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAcC,EAAQ,IAEtBC,EAAe,SAACC,GACpBA,EAAEC,iBACFN,EAASO,cACTX,EAAQY,KAAR,WAAiBR,EAASO,iBAY5B,OACE,yBAASE,UAAU,iCAAnB,SACE,qBAAKA,UAAU,2BAAf,SACE,qBAAKA,UAAU,8BAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,+BAAd,gCAGA,oBAAIA,UAAU,+BAAd,gCAGA,qBAAKA,UAAU,QAAf,SACE,uBAAMA,UAAU,QAAQC,SAAUN,EAAlC,UACE,uBACEK,UAAU,8BACVE,KAAK,OACLC,SA1BG,SAACP,GACpBJ,EAAYI,EAAEQ,OAAOC,QA0BLC,YAAY,oBAEd,qBAAKN,UAAU,cAAf,SACE,wBAAQE,KAAK,SAASF,UAAU,sCAAsCC,SAAUN,EAAhF,2BAIN,qBAAKK,UAAU,wBAAf,SACE,wBAAQA,UAAU,oBAAoBO,QA/B3B,SAACX,GACxBA,EAAEC,iBACFV,EAAQY,KAAR,WAAiBN,OA6BL,iD,mECPDe,MAvCf,YAA0E,IAEvDC,EAFOC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MAK9D,OACE,qBAAKf,UAAU,2BAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAIA,UAAU,6CAAd,gCAPSS,EAO6EC,EAPxDD,EAAiBO,OAAO,GAAGC,cAAgBR,EAAiBS,MAAM,IAOhG,KAA+FJ,EAA/F,SAEF,sBAAKd,UAAU,eAAf,UACE,6BAAI,qDACHa,EAAIM,KAAI,SAAAC,GAEP,OADAC,QAAQC,IAAIF,GAEV,4BAAmBA,GAAXA,SAId,qBAAKpB,UAAU,eAAf,SACE,+BAAI,8CAA2BY,OAEhCG,GAAS,sBAAKf,UAAU,eAAf,UACR,6BAAI,8CACJ,cAAC,IAAD,CACEuB,IAAKR,EACLS,UAAQ,OAIXb,GAAY,qBAAKX,UAAU,eAAf,SACX,+BAAI,gDAAJ,IAAiCW,a,iBClCpC,SAASc,IACdC,SAAOC,KAAK,2DAA4D,QAAS,KC8GpEC,MAxGf,WACE,IAAMC,EAASC,cAEfC,cACA,IAAM5C,EAAUC,cAChB,EAA0BC,IAAMC,SAAS,MAAzC,mBAAO0C,EAAP,KAAcC,EAAd,KACA,EAAgC5C,IAAMC,SAASuC,EAAOtC,UAAtD,mBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAA8CH,IAAMC,UAAS,GAA7D,mBAAO4C,EAAP,KAAwBC,EAAxB,KAEA9C,IAAM+C,WAAU,WACd,IAAMC,EAAO,uCAAG,4BAAAC,EAAA,+EAEMC,IAAMC,IAAN,0DAA6DjD,IAFnE,OAENkD,EAFM,OAIZpB,QAAQC,IAAImB,EAAIC,MAChBT,EAASQ,EAAIC,MALD,gDAOZP,GAAmB,GAPP,yDAAH,qDAUbE,MACC,CAAC9C,IAEJ8B,QAAQC,IAAIU,GAEZ,IAKA,EAAsC3C,IAAMC,SAAS,IAArD,mBAAOqD,EAAP,KAAoBC,EAApB,KAEMjD,EAAe,SAACC,GACpBA,EAAEC,iBACF8C,EAAY7C,cACRoC,EAEFC,GAAmB,IAEnB3C,EAAYmD,GAEZxD,EAAQY,KAAR,WAAiB4C,MAUrB,OACE,yBAAS3C,UAAU,uCAAnB,SACE,qBAAKA,UAAU,gCAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,+BAAd,gCAGA,oBAAIA,UAAU,+BAAd,mCAIF,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,uBAAMA,UAAU,QAAQC,SAAUN,EAAlC,UACE,uBACEK,UAAU,8BACVE,KAAK,OACLC,SAzBG,SAACP,GACpBgD,EAAehD,EAAEQ,OAAOC,QAyBRC,YAAY,iBAEd,qBAAKN,UAAU,cAAf,SACE,wBAAQA,UAAU,2BAA2BE,KAAK,SAASD,SAAUN,EAArE,+BAMTuC,GAAmBT,IACnBO,GACCA,EAAMb,KAAI,SAAA0B,GAAI,OACZ,cAAC,EAAD,CAEEnC,KAAMmC,EAAKA,KACXlC,SAAUkC,EAAKlC,SACfC,OAAQiC,EAAKjC,OACbE,QAAS+B,EAAKC,SAAS,GAAGC,aAC1BlC,IAAKgC,EAAKC,SAAS,GAAGE,YAAY7B,KAAI,SAAA8B,GAAU,OAAIA,EAAWA,cAC/DlC,MAAO8B,EAAKK,UAAU,GAAKL,EAAKK,UAAU,GAAGnC,MAAQ,MANhDoC,kBASX,qBAAKnD,UAAU,UAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,wBAAQA,UAAU,oBAAoBO,QAtE9B,WAClBpB,EAAQY,KAAK,MAqEH,8B,QCtFCqD,MAbf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,UCRRC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a1fbec49.chunk.js","sourcesContent":["import React from 'react'\nimport { useHistory } from 'react-router'\n\n\nfunction Home() {\n  const history = useHistory()\n  const [userWord, setUserWord] = React.useState('')\n  const randomWords = require('random-words')\n\n  const handleSubmit = (e) => {\n    e.preventDefault() \n    userWord.toLowerCase()\n    history.push(`/${userWord.toLowerCase()}`)\n  }\n\n  const handleChange = (e) => {\n    setUserWord(e.target.value )\n  }\n\n  const handleRandomWord = (e) => {\n    e.preventDefault()\n    history.push(`/${randomWords()}`)\n  }\n  \n  return (\n    <section className=\"hero is-fullheight-with-navbar\">\n      <div className=\"container is-max-desktop\">\n        <div className=\"hero-body has-text-centered\">\n          <div className=\"container is-centered\">\n            <div className=\"container\">\n              <h1 className=\"title is-1 has-text-centered\">\n            Clever Nightingale\n              </h1>\n              <h3 className=\"title is-3 has-text-centered\">\n            English Dictionary\n              </h3>\n              <div className=\"level\">\n                <form className=\"level\" onSubmit={handleSubmit}>\n                  <input\n                    className=\"input is-primary level-item\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    placeholder=\"Enter word here\"\n                  />\n                  <div className=\"level-right\">\n                    <button type=\"submit\" className=\"button is-primary level-item define\" onSubmit={handleSubmit}>Define</button>\n                  </div>\n                </form>\n              </div>\n              <div className=\"box-has-text-centered\">\n                <button className=\"button is-primary\" onClick={handleRandomWord}>Random Word Generator</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Home\n","import ReactAudioPlayer from 'react-audio-player'\nimport React from 'react'\n\n\nfunction DefinitionCard({ name, phonetic, origin, def, element, audio }) {\n\n  const capital = (wordToCapitalize) => wordToCapitalize.charAt(0).toUpperCase() + wordToCapitalize.slice(1)\n  \n\n  return (\n    <div className=\"container is-max-desktop\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"card-header-title is-centered is-turquoise\">You searched for: {capital(name)} ({element})</h3>\n        </div>\n        <div className=\"card-content\">\n          <h5><strong>Definitions: </strong></h5>\n          {def.map(eachDef => {\n            console.log(eachDef)\n            return (\n              <p key={eachDef}>{(eachDef)}</p>\n            )\n          })}\n        </div>\n        <div className=\"card-content\">\n          <h5><strong>Origin: </strong>{(origin)}</h5>\n        </div>\n        {audio && <div className=\"card-content\">\n          <h5><strong>Audio:</strong></h5>\n          <ReactAudioPlayer\n            src={audio}\n            controls\n          >\n          </ReactAudioPlayer>\n        </div>}\n        {phonetic && <div className=\"card-content\">\n          <h5><strong>Phonetic: </strong> {phonetic}</h5>\n        </div>}\n      </div>\n    </div>\n  )\n}\n\nexport default DefinitionCard","import { notify } from 'react-notify-toast'\n\nexport function createNotification() {\n  notify.show('Looks like you made a spelling mistake. Please try again', 'error', 3000)\n}","import React from 'react'\nimport axios from 'axios'\nimport { v4 as uuid } from 'uuid'\nimport { useParams } from 'react-router'\nimport { useHistory, useLocation } from 'react-router'\nimport DefinitionCard from './DefinitionCard'\nimport { createNotification } from '../common/Notification'\n\n\nfunction DefinitionShow() {\n  const params = useParams()\n  // const location = useLocation()\n  useLocation()\n  const history = useHistory()\n  const [words, setWords] = React.useState(null)\n  const [userWord, setUserWord] = React.useState(params.userWord)\n  const [isSpellingError, setSpellingIsError] = React.useState(false)\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const res = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${userWord}`)\n        // console.log(res.data[0])\n        console.log(res.data)\n        setWords(res.data)\n      } catch (err) {\n        setSpellingIsError(true)\n      }\n    }\n    getData()\n  }, [userWord])\n  // console.log(hasNoAudio)\n  console.log(words)\n\n  const handleReset = () => {\n    history.push('/')\n  }  \n  // console.log(id)\n\n  const [userNewWord, setUserNewWord] = React.useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault() \n    userNewWord.toLowerCase()\n    if (isSpellingError) {\n      createNotification\n      setSpellingIsError(false)\n    } else {\n      setUserWord(userNewWord)\n      // history.push('/')\n      history.push(`/${userNewWord}`)\n    }\n  }\n\n  const handleChange = (e) => {\n    setUserNewWord(e.target.value)\n  }\n  // console.log(userWord)\n\n\n  return (\n    <section className=\"container is-max-desktop is-centered\">\n      <div className=\"column-body has-text-centered\">\n        <div className=\"container is-centered\">\n          <div className=\"section\">\n            <h1 className=\"title is-1 has-text-centered\">\n            Clever Nightingale\n            </h1>\n            <h3 className=\"title is-3 has-text-centered\">\n            English Dictionary\n            </h3>\n          </div>\n          <div className=\"container\">\n            <div className=\"container is-centered\">\n              <div className=\"section\">\n                <form className=\"level\" onSubmit={handleSubmit}>\n                  <input\n                    className=\"input is-primary level-item\"\n                    type=\"text\"\n                    onChange={handleChange}\n                    placeholder=\"Search Again\"\n                  />\n                  <div className=\"level-right\">\n                    <button className=\"button is-primary define\" type=\"submit\" onSubmit={handleSubmit}>Define</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n          {isSpellingError && createNotification()}\n          {words &&\n            words.map(word => (\n              <DefinitionCard\n                key={uuid()}\n                name={word.word}\n                phonetic={word.phonetic}\n                origin={word.origin}\n                element={word.meanings[0].partOfSpeech}\n                def={word.meanings[0].definitions.map(definition => definition.definition)}\n                audio={word.phonetics[0] ? word.phonetics[0].audio : null}\n              />\n            ))}\n          <div className=\"section\">\n            <div className=\"box-has-text-centered\">\n              <button className=\"button is-primary\" onClick={handleReset}>Home</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default DefinitionShow","import Home from './components/common/Home'\nimport DefinitionShow from './components/definition/DefinitionShow'\nimport Notification from 'react-notify-toast'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Notification />\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"/:userWord\">\n        <DefinitionShow />\n      </Route>\n    </BrowserRouter>\n  )\n}\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}